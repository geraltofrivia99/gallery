{"version":3,"sources":["components/Grid/ImageComponen.js","components/Grid/utils.js","components/Grid/consts.js","components/Grid/index.jsx","App.js","serviceWorker.js","index.js"],"names":["ImageComp","memo","image","cacheImage","useState","load","setLoad","useEffect","undefined","img","Image","src","decode","then","catch","className","alt","requestAnimFrame","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","callback","setTimeout","scrollTo","scrollingEl","to","duration","isVertical","start","scrollTop","scrollLeft","change","currentTime","animateScroll","amount","val","t","b","c","d","ts","tc","inOutQuintic","moveHorizontal","PREVENT_SCROLL","preventScroll","data","w","h","i","Array","fill","map","_","rowIndex","colIndex","cell","rowNumber","prevkey","Cell","columnIndex","style","trulyRowIndex","length","trulyColumnIndex","dataImage","id","tabIndex","key","left","top","width","height","innerElementType","forwardRef","ref","rest","paddingLeft","paddingTop","GridComp","gridRef","useRef","wrapperRef","debounceKeyDown","useCallback","f","ms","isCooldown","apply","this","arguments","debounce","e","preventDefault","stopPropagation","keyCode","setFocus","setFocusToElement","el","focus","direction","document","activeElement","previousSibling","nextSibling","split","row","column","getElementById","current","scrollToItem","align","onFocus","target","getBoundingClientRect","right","bottom","innerHeight","_outerRef","Math","abs","offsetWidth","onKeyDown","columnCount","columnWidth","ITEM_WIDTH","rowCount","rowHeight","ITEM_HEIGHT","innerWidth","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"yQAEaA,EAAYC,gBAAK,YAA4B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAAiB,EAC7BC,oBAA+B,IAAtBD,EAAWD,IADS,mBAC9CG,EAD8C,KACxCC,EADwC,KAcrD,OAZAC,qBAAU,WACR,QAA0BC,IAAtBL,EAAWD,GAAsB,CACnC,IAAMO,EAAM,IAAIC,MAAM,IAAK,KAC3BD,EAAIE,IAAMT,EACVO,EAAIG,SAASC,MAAK,WACdV,EAAWD,IAAS,EACpBI,GAAQ,MACTQ,OAAM,WACLX,EAAWD,IAAS,QAGzB,CAACA,IACAG,EAEE,yBAAKU,UAAU,QAAQJ,IAAKT,EAAOc,IAAK,KAI5C,yBAAKD,UAAU,yBCCrB,IAAME,EACMC,OAAOC,uBAAyBD,OAAOE,6BAA+BF,OAAOG,0BAA4B,SAAUC,GAAYJ,OAAOK,WAAWD,EAAU,IAAO,KAGvK,SAASE,EAASC,EAAaC,EAAIC,EAAUC,EAAYN,GAU5D,IAAIO,EAFOD,EAAaH,EAAYK,UAAYL,EAAYM,WAGxDC,EAASN,EAAKG,EACdI,EAAc,EAElBN,EAAiC,qBAAdA,EAA6B,IAAMA,GAClC,SAAhBO,IAEA,IAhBkBC,EAgBdC,EA3BV,SAAsBC,EAAGC,EAAGC,EAAGC,GAC7B,IAAIC,GAAMJ,GAAGG,GAAGH,EAChBK,EAAKD,EAAGJ,EACR,OAAOC,EAAEC,GAAG,EAAEG,EAAGD,GAAM,GAAGA,EAAGA,EAAK,GAAGC,GAwBvBC,CADVV,GAHY,GAIwBJ,EAAOG,EAAQL,GAC/CC,GAjBcO,EAkBDC,EAjBjBX,EAAYK,UAAYK,GAE5B,SAAwBA,GACpBV,EAAYM,WAAaI,EAgBrBS,CAAeR,GAEfH,EAAcN,EAClBV,EAAiBiB,GAEbZ,GAAiC,oBAAdA,GACnBA,IAIRY,GC1DG,IAaMW,EAAiB,CAAEC,eAAe,GCFzCC,G,MAAQ,WAAqB,IAApBC,EAAmB,uDAAf,GAAIC,EAAW,uDAAP,GACrBC,EAAI,EACR,OAAO,IAAIC,MAAMF,GAAGG,KAAK,GAAGC,KAAI,SAACC,EAAGC,GAClC,OAAO,IAAIJ,MAAMH,GAAGI,KAAK,GAAGC,KAAI,SAACC,EAAGE,GAClC,MAAO,CACLtD,MAAM,4BAAD,OAA8BgD,IAA9B,YACLO,KAAMD,EACNE,UAAWH,SAPL,IAaRpD,EAAa,GACfwD,EAAU,KAERC,EAAO3D,gBAAK,YAAuC,IAApC4D,EAAmC,EAAnCA,YAAaN,EAAsB,EAAtBA,SAAUO,EAAY,EAAZA,MACpCC,EAAgBR,EAAWR,EAAKiB,OAChCC,EAAmBJ,EAAcd,EAAKgB,GAAeC,OAFL,EAGnBjB,EAAKgB,GAAeE,GAAxCC,EAHuC,EAG9ChE,MAAkBuD,EAH4B,EAG5BA,KAC1B,OACE,yBACEU,GAASZ,EAAW,IAAMM,EAC1BO,SAAU,EACVrD,UAAU,aACVsD,IAAUR,EAAc,IAAMN,EAC9BO,MAAK,2BACAA,GADA,IAEHQ,KAAMR,EAAMQ,KDjCG,ECkCfC,IAAKT,EAAMS,IDlCI,ECmCfC,MAAOV,EAAMU,MDnCE,ECoCfC,OAAQX,EAAMW,ODpCC,KCuCjB,yBAAK1D,UAAU,mBACb,kBAACf,EAAD,CAAWE,MAAOgE,EAAW/D,WAAYA,KAE3C,yBAAKY,UAAU,WACb,0BAAMA,UAAU,SAAhB,wBAA8C0C,EAA9C,KACA,0BAAM1C,UAAU,QAAhB,kBAMF2D,EAAmBC,sBAAW,WAAqBC,GAArB,IAAGd,EAAH,EAAGA,MAAUe,EAAb,gCAClC,uCACED,IAAKA,EACLd,MAAK,2BACAA,GADA,IAEHgB,YDvDiB,ECwDjBC,WDxDiB,KC0DfF,OAIKG,EAAW,WACtB,IAAMC,EAAUC,mBACVC,EAAaD,mBAwCbE,EAAkBC,sBF7GnB,SAAkBC,EAAGC,GAExB,IAAIC,GAAa,EAEjB,OAAO,WACDA,IAEJF,EAAEG,MAAMC,KAAMC,WAEdH,GAAa,EAEbjE,YAAW,kBAAMiE,GAAa,IAAOD,KEkGLK,EArBlB,SAAAC,GAChBA,EAAEC,iBACFD,EAAEE,kBACgB,KAAdF,EAAEG,SACJrC,EAAU,GACVsC,EDpFY,OCqFW,KAAdJ,EAAEG,SAEXrC,EAAU,GACVsC,EDvFc,SCwFS,KAAdJ,EAAEG,SAEXrC,EAAU,GACVsC,ED9Fc,SC+FS,KAAdJ,EAAEG,UAEXrC,EAAU,GACVsC,EDjGe,YAKQ,KCgG6C,IAElEC,EAAoB,SAACC,GACrBA,GACFA,EAAGC,MAAMvD,IAIPoD,EAAW,SAACI,GAChB,GD/GgB,SC+GZA,EACAH,EAAkBI,SAASC,cAAcC,sBACtC,GDhHU,UCgHNH,EACPH,EAAkBI,SAASC,cAAcE,kBACtC,GDjHO,OCiHHJ,EAAkB,CAAC,IAAD,EACHC,SAASC,cAAcpC,GAAGuC,MAAM,KAD7B,mBAClBC,EADkB,KACbC,EADa,KAEzBV,EAAkBI,SAASO,eAAT,WAA4BF,EAAM,EAAlC,YAAuCC,SACtD,CAAC,IAAD,EACmBN,SAASC,cAAcpC,GAAGuC,MAAM,KADnD,mBACIC,EADJ,KACSC,EADT,KAEHV,EAAkBI,SAASO,eAAT,WAA4BF,EAAM,EAAlC,YAAuCC,OAc/D,OAVArG,qBAAU,WACR0E,EAAQ6B,QAAQC,aAAa,CAC3BC,MAAO,QACPnD,YDrIwB,ICsIxBN,SDrIqB,MCuIvBhC,YAAW,WACT+E,SAASO,eAAT,UDxIqB,ICwIrB,YDzIwB,MCyIoCT,MAAMvD,KACjE,OACF,IAED,yBAAKoE,QAvES,SAAApB,GAAM,IAAD,EACkBA,EAAEqB,OAAOC,wBAAtC7C,EADW,EACXA,KAAM8C,EADK,EACLA,MAAO7C,EADF,EACEA,IAAK8C,EADP,EACOA,OAC1B,GAAgB,KAAZ1D,GAAkB0D,GAAUnG,OAAOoG,YAAa,CAClD,IAAM5F,EAAM2F,EAASnG,OAAOoG,YAAerC,EAAQ6B,QAAQS,UAAUzF,UACrEN,EAASyD,EAAQ6B,QAAQS,UAAW7F,EAAI,KAAM,QACzC,GAAgB,KAAZiC,GAAkBY,GAAO,EAAG,CACrC,IAAM7C,EAAKuD,EAAQ6B,QAAQS,UAAUzF,UAAY0F,KAAKC,IAAIlD,GAC1D/C,EAASyD,EAAQ6B,QAAQS,UAAW7F,EAAI,KAAM,QACzC,GAAgB,KAAZiC,GAAkByD,GAASjC,EAAW2B,QAAQY,YAAa,CACpE,IAAMhG,EAAM0F,EAAQjC,EAAW2B,QAAQY,YAAezC,EAAQ6B,QAAQS,UAAUxF,WAChFP,EAASyD,EAAQ6B,QAAQS,UAAW7F,EAAI,KAAM,QACzC,GAAgB,KAAZiC,GAAkBW,GAAQ,EAAG,CACtC,IAAM5C,EAAKuD,EAAQ6B,QAAQS,UAAUxF,WAAayF,KAAKC,IAAInD,GAC3D9C,EAASyD,EAAQ6B,QAAQS,UAAW7F,EAAI,KAAM,GAEhDiC,EAAU,MAwDagE,UAAWvC,EAAiBR,IAAKO,GACtD,kBAAC,IAAD,CACEpE,UAAU,OACV6G,YDjJoB,ICkJpBC,YAAa,kBAAMC,KACnBrD,OAAQvD,OAAOoG,YACf5C,iBAAkBA,EAClBqD,SDtJiB,ICuJjBC,UAAW,kBAAMC,KACjBzD,MAAOtD,OAAOgH,WACdtD,IAAKK,GAEJrB,K,MChJMuE,MANf,WACE,OACE,kBAAC,EAAD,OCKgBC,QACW,cAA7BlH,OAAOmH,SAASC,UAEe,UAA7BpH,OAAOmH,SAASC,UAEhBpH,OAAOmH,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFpC,SAASO,eAAe,SDyHpB,kBAAmB8B,WACrBA,UAAUC,cAAcC,MACrBhI,MAAK,SAAAiI,GACJA,EAAaC,gBAEdjI,OAAM,SAAAkI,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.18273600.chunk.js","sourcesContent":["import React, { memo, useState, useEffect } from 'react';\r\n\r\nexport const ImageComp = memo(({ image, cacheImage }) => {\r\n    const [load, setLoad] = useState(cacheImage[image] === true); //dsa\r\n    useEffect(() => {\r\n      if (cacheImage[image] === undefined) {\r\n        const img = new Image(300, 200);\r\n        img.src = image;\r\n        img.decode().then(() => {\r\n            cacheImage[image] = true;\r\n            setLoad(true);\r\n        }).catch(() => {\r\n            cacheImage[image] = false;\r\n        })\r\n      }\r\n    }, [image]);\r\n    if (load) {\r\n      return (\r\n          <img className=\"image\" src={image} alt={\"\"} />\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"image-placeholder\" />\r\n    );\r\n  });","\r\nexport function debounce(f, ms) {\r\n\r\n    let isCooldown = false;\r\n  \r\n    return function() {\r\n      if (isCooldown) return;\r\n  \r\n      f.apply(this, arguments);\r\n  \r\n      isCooldown = true;\r\n  \r\n      setTimeout(() => isCooldown = false, ms);\r\n    };\r\n  \r\n  }\r\n\r\n  function inOutQuintic(t, b, c, d) {\r\n    var ts = (t/=d)*t,\r\n    tc = ts*t;\r\n    return b+c*(6*tc*ts + -15*ts*ts + 10*tc);\r\n};\r\n\r\nconst requestAnimFrame = (function(){\r\n    return  window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function( callback ){ window.setTimeout(callback, 1000 / 60); };\r\n})();\r\n\r\nexport function scrollTo(scrollingEl, to, duration, isVertical, callback) {\r\n    function moveVertical(amount) {\r\n        scrollingEl.scrollTop = amount;\r\n    }\r\n    function moveHorizontal(amount) {\r\n        scrollingEl.scrollLeft = amount;\r\n    }\r\n    function position() {\r\n        return isVertical ? scrollingEl.scrollTop : scrollingEl.scrollLeft;\r\n    }\r\n    var start = position(),\r\n        change = to - start,\r\n        currentTime = 0,\r\n        increment = 20;\r\n    duration = (typeof(duration) === 'undefined') ? 500 : duration;\r\n    var animateScroll = function() {\r\n        currentTime += increment;\r\n        var val = inOutQuintic(currentTime, start, change, duration);\r\n        if (isVertical) {\r\n            moveVertical(val);\r\n        } else {\r\n            moveHorizontal(val);\r\n        }\r\n        if (currentTime < duration) {\r\n        requestAnimFrame(animateScroll);\r\n        } else {\r\n        if (callback && typeof(callback) === 'function') {\r\n            callback();\r\n        }\r\n        }\r\n    };\r\n    animateScroll();\r\n}","export const TOTAL_ROW = 4000;\r\nexport const TOTAL_COLUMN = 4000;\r\nexport const INITIAL_COLUMN = 2000;\r\nexport const INITIAL_ROW = 2000;\r\nexport const ITEM_WIDTH = 300;\r\nexport const ITEM_HEIGHT = 200;\r\nexport const PADDING = 5;\r\n\r\nexport const LEFT = 'LEFT';\r\nexport const RIGHT = 'RIGHT';\r\nexport const UP = 'UP';\r\nexport const DOWN = 'DOWN';\r\n\r\nexport const PREVENT_SCROLL = { preventScroll: true };\r\nexport const DEBOUNCE_TIME = 300;","import React, { useCallback, useRef, useEffect, forwardRef, memo } from \"react\";\r\nimport { VariableSizeGrid as Grid } from \"react-window\";\r\nimport { ImageComp } from './ImageComponen'\r\nimport { debounce, scrollTo } from './utils';\r\nimport { TOTAL_COLUMN, TOTAL_ROW, INITIAL_COLUMN,\r\n    INITIAL_ROW, ITEM_HEIGHT, ITEM_WIDTH, PADDING,\r\n    LEFT, RIGHT, UP, DOWN, PREVENT_SCROLL, DEBOUNCE_TIME } from './consts';\r\n\r\nimport \"./styles.css\";\r\n\r\n\r\nconst data = ((w = 20, h = 15) => {\r\n  let i = 1;\r\n  return new Array(h).fill(0).map((_, rowIndex) => {\r\n    return new Array(w).fill(0).map((_, colIndex) => {\r\n      return {\r\n        image: `https://picsum.photos/id/${i++}/300/200`,\r\n        cell: colIndex,\r\n        rowNumber: rowIndex\r\n      };\r\n    });\r\n  });\r\n})();\r\n\r\nconst cacheImage = {};\r\nlet prevkey = null;\r\n\r\nconst Cell = memo(({ columnIndex, rowIndex, style }) => {\r\n  const trulyRowIndex = rowIndex % data.length;\r\n  const trulyColumnIndex = columnIndex % data[trulyRowIndex].length;\r\n  const { image: dataImage, cell } = data[trulyRowIndex][trulyColumnIndex];\r\n  return (\r\n    <div\r\n      id={\"\" + rowIndex + \":\" + columnIndex}\r\n      tabIndex={0}\r\n      className=\"cell-inner\"\r\n      key={\"\" + columnIndex + \" \" + rowIndex}\r\n      style={{\r\n        ...style,\r\n        left: style.left + PADDING,\r\n        top: style.top + PADDING,\r\n        width: style.width - PADDING,\r\n        height: style.height - PADDING\r\n      }}\r\n    >\r\n      <div className=\"image-container\">\r\n        <ImageComp image={dataImage} cacheImage={cacheImage}/>\r\n      </div>\r\n      <div className=\"details\">\r\n        <span className=\"title\">Image number in row: {cell} </span>\r\n        <span className=\"info\">Lorem ...</span>\r\n      </div>\r\n    </div>\r\n  );\r\n})\r\n\r\nconst innerElementType = forwardRef(({ style, ...rest }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    style={{\r\n      ...style,\r\n      paddingLeft: PADDING,\r\n      paddingTop: PADDING\r\n    }}\r\n    {...rest}\r\n  />\r\n));\r\n\r\nexport const GridComp = () => {\r\n  const gridRef = useRef();\r\n  const wrapperRef = useRef();\r\n\r\n  const onFocus = e => {\r\n    const { left, right, top, bottom } = e.target.getBoundingClientRect();\r\n    if (prevkey === 83 && bottom >= window.innerHeight) {\r\n      const to = (bottom - window.innerHeight) + gridRef.current._outerRef.scrollTop;\r\n      scrollTo(gridRef.current._outerRef, to, 1000, true);\r\n    } else if (prevkey === 87 && top <= 0) {\r\n      const to = gridRef.current._outerRef.scrollTop - Math.abs(top);\r\n      scrollTo(gridRef.current._outerRef, to, 1000, true);\r\n    } else if (prevkey === 68 && right >= wrapperRef.current.offsetWidth) {\r\n      const to = (right - wrapperRef.current.offsetWidth) + gridRef.current._outerRef.scrollLeft;\r\n      scrollTo(gridRef.current._outerRef, to, 1000, false);\r\n    } else if (prevkey === 65 && left <= 0) {\r\n      const to = gridRef.current._outerRef.scrollLeft - Math.abs(left);\r\n      scrollTo(gridRef.current._outerRef, to, 1000, false);\r\n    }\r\n    prevkey = null;\r\n  };\r\n  const onKeyDown = e => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (e.keyCode === 87) {\r\n      prevkey = 87;\r\n      setFocus(UP);\r\n    } else if (e.keyCode === 83) {\r\n      //down\r\n      prevkey = 83;\r\n      setFocus(DOWN);\r\n    } else if (e.keyCode === 65) {\r\n      //left\r\n      prevkey = 65;\r\n      setFocus(LEFT);\r\n    } else if (e.keyCode === 68) {\r\n      //right\r\n      prevkey = 68;\r\n      setFocus(RIGHT);\r\n    }\r\n  };\r\n\r\n  const debounceKeyDown = useCallback(debounce(onKeyDown, DEBOUNCE_TIME), []);\r\n\r\n  const setFocusToElement = (el) => {\r\n    if (el) {\r\n      el.focus(PREVENT_SCROLL);\r\n    }\r\n  }\r\n\r\n  const setFocus = (direction) => {\r\n    if (direction === LEFT) {\r\n        setFocusToElement(document.activeElement.previousSibling);\r\n    } else if (direction === RIGHT) {\r\n        setFocusToElement(document.activeElement.nextSibling);\r\n    } else if (direction === UP) {\r\n        const [row, column] = document.activeElement.id.split(\":\");\r\n        setFocusToElement(document.getElementById(`${+row - 1}:${column}`));\r\n    } else {\r\n        const [row, column] = document.activeElement.id.split(\":\");\r\n        setFocusToElement(document.getElementById(`${+row + 1}:${column}`));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    gridRef.current.scrollToItem({\r\n      align: \"start\",\r\n      columnIndex: INITIAL_COLUMN,\r\n      rowIndex: INITIAL_ROW\r\n    });\r\n    setTimeout(() => {\r\n      document.getElementById(`${INITIAL_ROW}:${INITIAL_COLUMN}`).focus(PREVENT_SCROLL);\r\n    }, 500)\r\n  }, []);\r\n  return (\r\n    <div onFocus={onFocus} onKeyDown={debounceKeyDown} ref={wrapperRef}>\r\n      <Grid\r\n        className=\"Grid\"\r\n        columnCount={TOTAL_COLUMN}\r\n        columnWidth={() => ITEM_WIDTH + PADDING}\r\n        height={window.innerHeight}\r\n        innerElementType={innerElementType}\r\n        rowCount={TOTAL_ROW}\r\n        rowHeight={() => ITEM_HEIGHT + PADDING}\r\n        width={window.innerWidth}\r\n        ref={gridRef}\r\n      >\r\n        {Cell}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport { Grid } from './components';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <Grid />\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}